<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.cmcrobotics.shadowtheater</groupId>
		<artifactId>shadowtheater</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../..</relativePath>
	</parent>

	<artifactId>cineglobe-daemon</artifactId>
	<packaging>jar</packaging>

	<name>Cineglobe Shadow Theather :: control daemon</name>
	<description>Runtime execution environment for the Cineglobe Shadow Theater</description>

	<properties>
		<base.image>openjdk:8-jdk-alpine</base.image>
		<image.name>cineglobe-daemon</image.name>
		<milton.version>2.7.2.4</milton.version>
	</properties>

	<profiles>
		<profile>
			<id>rpi3</id>
			<properties>
				<base.image>resin/raspberrypi3-alpine-openjdk:8-jdk</base.image>
				<image.name>cineglobe-shadow-theater/rpi3-daemon</image.name>
			</properties>
		</profile>
		<profile>
			<id>gitlab-x64</id>
			<properties>
				<image.name>gitlab-registry.cern.ch/cineglobe-shadow-theater/images/daemon</image.name>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-jpa</artifactId> 
			</dependency> <dependency> <groupId>org.hsqldb</groupId> <artifactId>hsqldb</artifactId> 
			<scope>runtime</scope> </dependency> <dependency> <groupId>com.querydsl</groupId> 
			<artifactId>querydsl-jpa</artifactId> </dependency -->

		<dependency>
			<groupId>uk.co.blackpepper.bowman</groupId>
			<artifactId>bowman-client</artifactId>
			<version>0.5.1</version>
		</dependency>


		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>webjars-locator</artifactId>
		</dependency>


		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>3.3.7-1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>qunit</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>hybind</artifactId>
			<version>1.4.3</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>bootstrap-select</artifactId>
			<version>1.12.4</version>
			<exclusions>
				<exclusion>
					<groupId>org.webjars.bower</groupId>
					<artifactId>jquery</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>packery</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>draggabilly</artifactId>
			<version>2.1.0</version>
		</dependency>

		<!-- dependency> <groupId>com.github.chibyhq.playar</groupId> <artifactId>repositories</artifactId> 
			<version>[0.1-SNAPSHOT,)</version> </dependency> <dependency> <groupId>com.github.chibyhq.playar</groupId> 
			<artifactId>client</artifactId> <version>[0.1-SNAPSHOT,)</version> </dependency -->
		<dependency>
			<groupId>com.github.chibyhq.playar</groupId>
			<artifactId>model</artifactId>
			<version>[0.1-SNAPSHOT,)</version>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate.javax.persistence</groupId>
					<artifactId>hibernate-jpa-2.1-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.querydsl</groupId>
					<artifactId>querydsl-collections</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>springloaded</artifactId>
						<version>1.2.5.RELEASE</version>
					</dependency>
				</dependencies>
				<configuration>
					<mainClass>com.github.cmcrobotics.shadowtheater.daemon.Application</mainClass>
					<layout>ZIP</layout>
					<addResources>true</addResources>
					<executable>true</executable>
					<embeddedLaunchScriptProperties>
					</embeddedLaunchScriptProperties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<!--executions> <execution> <id>build-image</id> <phase>package</phase> 
					<goals> <goal>build</goal> </goals> </execution> <execution> <id>push-image</id> 
					<phase>deploy</phase> <goals> <goal>push</goal> </goals> <configuration> 
					<imageName>${image.name}</imageName> </configuration> </execution> </executions -->
				<configuration>
					<imageName>${image.name}</imageName>
					<baseImage>${base.image}</baseImage>
					<forceTags>true</forceTags>
					<useConfigFile>true</useConfigFile>
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
					<env>
						<INSTALLATION_HOME>/opt/cineglobe-daemon</INSTALLATION_HOME>
						<APP_HOME>${INSTALLATION_HOME}/applications</APP_HOME>
						<APP_LOGS>/var/log/cineglobe-daemon</APP_LOGS>
						<LANG>C.UTF-8</LANG>
						<MIRROR>http://distrib-coffee.ipsl.jussieu.fr/pub/linux/alpine/alpine/</MIRROR>
					</env>
					<runs>
						<!--run>apk - -update add docker iptables ca-certificates bash</run -->
						<run>mkdir -p $INSTALLATION_HOME</run>
						<run>mkdir -p $APP_HOME</run>
						<run>chmod -R 777 $APP_HOME</run>
						<run>mkdir -p $APP_LOGS</run>
						<!--run>rm -rf /var/cache/apk/*</run -->
					</runs>
					<workdir>$INSTALLATION_HOME</workdir>
					<cmd>["java","-jar","${project.build.finalName}.${project.packaging}"]</cmd>
					<exposes>
						<expose>8080</expose>
					</exposes>
					<volumes>
						<volume>$APP_LOGS</volume>
						<volume>$APP_HOME</volume>
					</volumes>
					<resources>
						<resource>
							<directory>${project.build.directory}</directory>
							<includes>
								<include>${project.build.finalName}.${project.packaging}</include>
							</includes>
							<targetPath>${INSTALLATION_HOME}</targetPath>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
